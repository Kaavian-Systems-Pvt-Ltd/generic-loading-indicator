{"version":3,"file":"main.751c42a108aa9dad55e6.hot-update.js","sources":["webpack:///./src/component/content.js","webpack:///./src/stories/Circle.stories.js","webpack:///./src/stories/content.stories.js"],"sourcesContent":["import React from \"react\";\r\nimport {useEffect,useState} from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport './loading.css';\r\n\r\nexport const Content = ({ primary, size,borderTopColor,...props }) => {\r\n    const mode = primary ? 'loading--primary' : 'loading--secondary';\r\n    const [post,setPost]=useState(null)\r\n\r\n    // useEffect(() => {\r\n    //     fetch('https://jsonplaceholder.typicode.com/posts/1')\r\n    //     .then(res=>res.json())\r\n    //     .then(res=>{\r\n    //         const {body}= res\r\n    //         console.log(body); \r\n    //         setPost(body);\r\n    //     });  \r\n    // },[])\r\n    return (\r\n        <div>\r\n            {/* <h1 align = \"center\">loading indicator</h1> */}\r\n            <h2>{post?post:<loading type='loading'\r\n            className={['loading', `loading--${size}`, mode].join(' ')}\r\n            style={borderTopColor && {borderTopColor}}\r\n            {...props} />}</h2> \r\n        </div>\r\n    //   <div>\r\n\r\n    //   {/* <h2>hello world</h2> */}\r\n    // </div >\r\n    );\r\n  };\r\n  Content.propTypes = {\r\n    /**\r\n   * Is this the principal call to action on the page?\r\n   */\r\n    primary: PropTypes.bool,\r\n    /**\r\n   * How large should the button be?\r\n   */\r\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\r\n/**\r\n   * What background color to use\r\n   */\r\n borderTopColor: PropTypes.string,\r\n \r\n};\r\n\r\nContent.defaultProps = {\r\n    primary:false,\r\n    size:'large',\r\n    borderTopColor:'#bac81f',\r\n};\r\n\r\n\r\n  ","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\r\\nimport { Content } from \\\"../component/content\\\";\\r\\nexport default {\\r\\n    title: 'Loading/content',\\r\\n    component: Content,\\r\\n    borderTopColor: { control: 'color' },\\r\\n};\\r\\n\\r\\nconst Template = (args) => <Content {...args} />;\\r\\n\\r\\nexport const Primary = Template.bind({});\\r\\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\\r\\nPrimary.args = {\\r\\n  primary: true,\\r\\n};\\r\\n\";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":17,\"line\":9},\"endLoc\":{\"col\":48,\"line\":9},\"startBody\":{\"col\":17,\"line\":9},\"endBody\":{\"col\":48,\"line\":9}}};\n    \nimport React from \"react\";\r\nimport { Content } from \"../component/content\";\r\nexport default {\r\n    title: 'Loading/content',\r\n    component: Content,\r\n    borderTopColor: { control: 'color' },\r\n};\r\n\r\nconst Template = (args) => <Content {...args} />;\r\n\r\nexport const Primary = Template.bind({});\r\n// More on args: https://storybook.js.org/docs/react/writing-stories/args\r\nPrimary.args = {\r\n  primary: true,\r\n};\r\n\n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Content {...args} />\" }, ...Primary.parameters };","\n    /* eslint-disable */\n    // @ts-nocheck\n    // @ts-ignore\n    var __STORY__ = \"import React from \\\"react\\\";\\r\\nimport { Content } from \\\"../../dist/bundle\\\";\\r\\nexport default {\\r\\n    title:'Loading/Content',\\r\\n    component:Content,\\r\\n    argTypes: {\\r\\n      borderTopColor: { control: 'color' },\\r\\n      },\\r\\n};\\r\\nconst Template = (args) => <Content {...args} />;\\r\\nexport const Primary = Template.bind({});\\r\\nPrimary.args = {\\r\\n  primary: true,\\r\\n  };\\r\\n  \";\n    // @ts-ignore\n    var __LOCATIONS_MAP__ = {\"Primary\":{\"startLoc\":{\"col\":17,\"line\":10},\"endLoc\":{\"col\":48,\"line\":10},\"startBody\":{\"col\":17,\"line\":10},\"endBody\":{\"col\":48,\"line\":10}}};\n    \nimport React from \"react\";\r\nimport { Content } from \"../../dist/bundle\";\r\nexport default {\r\n    title:'Loading/Content',\r\n    component:Content,\r\n    argTypes: {\r\n      borderTopColor: { control: 'color' },\r\n      },\r\n};\r\nconst Template = (args) => <Content {...args} />;\r\nexport const Primary = Template.bind({});\r\nPrimary.args = {\r\n  primary: true,\r\n  };\r\n  \n\n\nPrimary.parameters = { storySource: { source: \"(args) => <Content {...args} />\" }, ...Primary.parameters };"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AA1BA;AA2BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;;;;A","sourceRoot":""}